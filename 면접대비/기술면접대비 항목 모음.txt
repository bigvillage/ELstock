지민

test
asdddd


재환


영찬


상완


영훈
5. springMVC동작방식을 설명해 주세요


1. DispatcherServlet이 브라우저로부터 요청을 받는다.
2. DispatcherServlet은 요청된 URL을 HandlerMapping 객체에 넘기고, 호출해야 할 Controller 메소드(핸들러) 정보를 얻는다.
3. DispatcherServlet이 HandlerAdapter 객체를 가져온다. 
4. HandlerAdapter 객체의 메소드를 실행한다. 
※ 보다 정확하게 표현한다면, HandlerMapping은 DispatcherServlet로부터 전달된 URL을 바탕으로 HandlerAdapter 객체를 포함하는 HandlerExecutionChain 객체를 생성하며, 이후 DispatcherServlet이 HandlerExecutionChain 객체로부터 HandlerAdapter 객체를 가져와서 해당 메소드를 실행하게 된다.
5. Controller 객체는 비즈니스 로직을 처리하고, 그 결과를 바탕으로 뷰(ex. JSP)에 전달할 객체를 Model 객체에 저장한다. DispatcherServlet에게 view name을 리턴한다.
6. DispatcherServlet은 view name을 View Resolver에게 전달하여 View 객체를 얻는다.
7. DispatcherServlet은 View 객체에 화면 표시를 의뢰한다.
8. View 객체는 해당하는 뷰(ex. JSP, Thymeleaf)를 호출하며, 뷰는 Model 객체에서 화면 표시에 필요한 객체를 가져와 화면 표시를 처리한다.


[Oracle DB]
1. 데이터베이스란 무엇이고 장단점은 무엇인가요?
데이터베이스에서 데이터는 일반적으로 처리 및 데이터 쿼리를 효율적으로 수행하기 위해 일련의 테이블에서 행과 열로 모델링됩니다. 그러면 데이터에 쉽게 액세스하고 관리, 수정, 업데이트, 제어 및 구성할 수 있습니다. 대부분의 데이터베이스는 데이터 작성 및 쿼리에 SQL(Structured Query Language)을 사용

2. sql에 대해 설명해주세요
SQL은 데이터를 쿼리, 조작 및 정의하고 액세스 제어를 제공하기 위해 거의 모든 관계형 데이터베이스에서 사용되는 프로그래밍 언어입니다


3. DDL, DML, DCL의 역할과 구문 예를 들어 설명하세요

DDL, 데이터 정의어 : CREATE(생성), ALTER(변경), DROP(제거)
DML, 데이터 조작어 : 데이터 삽입(insert)/수정(update)/삭제(delete)
DCL, 데이터 제어문 : GRANT, REVOKE(사용자 관리/권한 주기 등등)


4. 트랜잭션이란 무엇인가요?
TCL, 트랜잭션 : commit, rollback
데이터 조작어에 대한 최종 결과를 영구 저장 또는 저장 취소 하기 위하여 필요한 언어


5. 기본키와 외래키에 대해 설명해주세요.

기본 키(Primary Key)란 
각각의 행(레코드)을 구별하기 위한 컬럼/필드를 말합니다.

특징 : 
- not null 조건과 unique 조건이 합쳐진 것,
- 내부적으로 검색 기능의 향상을 위하여 인덱스(index)가 생성됨


외래 키(foreign key)란
부모 테이블의 기본 키를 참조하는 서브 테이블의 컬럼에 부여되는 키를 의미함.

6. where와 having의 차이점
select 절에 대한 조건절은 where 절인 반면에, group by절에 대한 조건절은 having 절임.


7. Group by란 무엇인가요?

Group by : 
데이터를 그룹핑하여 좀더 작은 그룹으로 나눌 때 사용함.
엑셀의 부분 합/평균 등의 기능과 동일한 개념임.


8. Inner join과 outer join의 차이점에 대해 설명하세요

inner join : 조인 조건을 만족하는 행만 표시함.

outer join : 조인 조건에 만족하지 않는 행도 추출됨.





9. 제약조건은 어떤 것이 있는지 말해보세요

제약 조건이란
데이터에 대한 정확성을 유지하기 위하여 원하지 않는 데이터가 입력/수정되는 것을 방지하기 위한 제약입니다.

제약조건의 목적
- 사용자로 하여금 잘못된 데이터를 입력하지 못하도록 하기 위함.
- 원치 않는 데이터를 수정하지 못하도록 사전에 테이블을 제한 사항을 두기 위함.

5가지 제약조건
- not null : 컬럼에 null 값을 허용하지 않으므로, 반드시 입력해야 하는 컬럼을 의미합니다.
- unique : 중복된 데이터의 입력을 허용하지 않는 조건으로, 널 값은 고려 대상이 아닙니다. 내부적으로 인덱스(index)가 생성이 됩니다.
- primary key : not null 조건과 unique 조건이 합쳐진 것입니다. 내부적으로 검색 기능의 향상을 위하여 인덱스(index)가 생성이 됩니다.
- foreign key : 부모 테이블의 기본 키를 참조하는 서브 테이블의 컬럼에 부여되는 키를 의미합니다.
- check : 저장 가능한 값의 범위 또는 조건을 지정하여 설정 값만 허용하기 위한 제약 조건입니다.
예를 들어 '급여 컬럼은 항상 0 이상입니다.', '성별 컬럼은 [남] 또는 [여]의 값 중에 하나가 입력이 될 수 있습니다.'



